//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace School.DataAccess.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Conn_SchoolDb : DbContext
    {
        public Conn_SchoolDb()
            : base("name=Conn_SchoolDb")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Tbl_Error> Tbl_Error { get; set; }
        public virtual DbSet<Tbl_Lesson> Tbl_Lesson { get; set; }
        public virtual DbSet<Tbl_Register> Tbl_Register { get; set; }
        public virtual DbSet<Tbl_Student> Tbl_Student { get; set; }
    
        public virtual int AddError(string errorText)
        {
            var errorTextParameter = errorText != null ?
                new ObjectParameter("ErrorText", errorText) :
                new ObjectParameter("ErrorText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddError", errorTextParameter);
        }
    
        public virtual int AddUser(string fn, string ln, string nc, string mo, Nullable<System.DateTime> rd, Nullable<System.DateTime> bd)
        {
            var fnParameter = fn != null ?
                new ObjectParameter("fn", fn) :
                new ObjectParameter("fn", typeof(string));
    
            var lnParameter = ln != null ?
                new ObjectParameter("ln", ln) :
                new ObjectParameter("ln", typeof(string));
    
            var ncParameter = nc != null ?
                new ObjectParameter("nc", nc) :
                new ObjectParameter("nc", typeof(string));
    
            var moParameter = mo != null ?
                new ObjectParameter("mo", mo) :
                new ObjectParameter("mo", typeof(string));
    
            var rdParameter = rd.HasValue ?
                new ObjectParameter("rd", rd) :
                new ObjectParameter("rd", typeof(System.DateTime));
    
            var bdParameter = bd.HasValue ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUser", fnParameter, lnParameter, ncParameter, moParameter, rdParameter, bdParameter);
        }
    
        public virtual int InsertStudent(string firstName, string lastName, string mobile)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertStudent", firstNameParameter, lastNameParameter, mobileParameter);
        }
    
        public virtual ObjectResult<SelectLessons_Result> SelectLessons()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectLessons_Result>("SelectLessons");
        }
    
        public virtual ObjectResult<SelectStudents_Result> SelectStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStudents_Result>("SelectStudents");
        }
    
        public virtual ObjectResult<SelectUser_Result> SelectUser(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUser_Result>("SelectUser", searchParameter);
        }
    }
}
